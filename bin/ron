#!/usr/bin/env ruby
## Usage: ron [OPTIONS] [FILE...]
##        ron --build FILE...  
## Convert ron file to roff or html.
##
## Options
##   -b, --build             write output to files instead of to stdout
##   -i, --install           write manpage to MAN_HOME or system man path
##
##       --roff              generate roff/man text; this is the default behavior
##   -5, --html              generate HTML
##
##       --help              show this help message
##
## See the ron(2)
require 'optparse'

formats = []
build = false
install = false
groff = "/usr/bin/groff -Wall -mtty-char -Tascii -mandoc -c"

ARGV.options do |option|
  option.on("--roff") { formats << 'roff' }
  option.on("-5", "--html") { formats << 'html' }
  option.on("-b", "--build") { build = true }
  option.on("-i", "--install") { install = true }

  option.on_tail("--help") {
    puts File.read(__FILE__).
      grep(/^##.*/).
      map { |line| line.chomp[3..-1] }.
      join("\n")
    exit
  }
  option.parse!
end

formats = ['roff'] if formats.empty?

require 'ron'
ARGV.each do |file|
  doc = Ron.new(file) { file == '-' ? STDIN.read : File.read(file) }
  formats.each do |format|
    output = doc.convert(format)
    if build
      File.open(doc.path(format), 'wb') { |f| f.write(output) }
    else
      $stdout.write(output)
    end
  end
end
