.\" generated with Ronn/v0.6.6
.\" http://github.com/rtomayko/ronn/
.
.TH "RONN" "5" "June 2010" "0.6-6-gd7645f2" "Ronn 0.6.6"
.
.SH "NAME"
\fBronn\fR \- markdown\-based text format for authoring manpages
.
.SH "SYNOPSIS"
.
.nf

name(1) \-\- short, single\-sentence description
=============================================

## SYNOPSIS

`name` [<optional>\.\.\.] <flags>

## DESCRIPTION

A normal paragraph\. This can span multiple lines and is terminated with two
or more line endings \-\- just like Markdown\.

Inline markup for `code`, `user input`, and **strong** are displayed
boldface; <variable>, _emphasis_, *emphasis*, are displayed in italics or
underline\.

Manual references like sh(1), markdown(7), roff(7), etc\. are displayed in
boldface and hyperlinked in HTML output\.

Link to other sections like [STANDARDS][], [SEE ALSO][], or
[WITH A DIFFERENT LINK TEXT][#SEE\-ALSO]\.

Definition lists:

  * `\-a`, `\-\-argument`=[<value>]:
    One or more paragraphs describing the argument\.
  * You can put whatever you *want* here, really:
    Nesting and paragraph spacing are respected\.

Markdown ordered and unordered lists too\.

Frequently used sections:

## OPTIONS
## SYNTAX
## ENVIRONMENT
## RETURN VALUES
## STANDARDS
## SECURITY CONSIDERATIONS
## BUGS
## HISTORY
## AUTHOR
## COPYRIGHT
## SEE ALSO
.
.fi
.
.SH "DESCRIPTION"
Ronn is a source format for authoring UNIX manpages\. The syntax includes all Markdown formatting features, plus conventions for expressing the structure and various notations present in standard UNIX manpages\.
.
.P
Ronn files can be converted to traditional roff\-formatted manpages or to HTML using the ronn(1) command\.
.
.P
Not all roff(7) typesetting features can be expressed using ronn syntax\.
.
.SH "MANPAGE TITLE"
Manpages have a \fIname\fR, \fIsection\fR number, and one\-line \fIdescription\fR\. Ronn files must start with a level one heading defining these attributes:
.
.IP "" 4
.
.nf

ls(1) \-\- list directory contents
================================
.
.fi
.
.IP "" 0
.
.P
Indicates that the manpage is named \fBls\fR in manual section \fB1\fR (\"user commands\")\.
.
.SH "SECTION HEADINGS"
Man section headings are expressed with markdown level two headings\. There are two syntaxes for level two headings\.
.
.P
Hash prefix syntax:
.
.IP "" 4
.
.nf

## HEADING TEXT
.
.fi
.
.IP "" 0
.
.P
Dash underline syntax:
.
.IP "" 4
.
.nf

HEADING TEXT
\-\-\-\-\-\-\-\-\-\-\-\-
.
.fi
.
.IP "" 0
.
.P
Section headings should be all uppercase and may not contain inline markup\.
.
.SH "INLINE MARKUP"
Manpages have a limited set of text formatting capabilities\. There\'s basically \fBboldface\fR and \fIitalics\fR (often displayed using \fIunderline\fR)\. Ronn uses the following bits of markdown(7) to accomplish this:
.
.TP
\fB`backticks`\fR
Code, flags, commands, and noun\-like things; typically displayed in in \fBboldface\fR\. Note that all text included within \fBbackticks\fR is displayed literally; other inline markup is not processed\.
.
.TP
\fB**double\-stars**\fR
Like \fBbackticks\fR but inline markup is processed\.
.
.TP
\fB_\fR\fIunderbars\fR\fB_\fR
User\-specified arguments, variables, or user input; typically displayed with \fIunderline\fR\.
.
.TP
\fB<angle\-quotes>\fR
Same as \fIunderbars\fR\. This is not compatible with Markdown\.
.
.P
Here is grep(1)\'s DESCRIPTION section represented in \fBronn\fR:
.
.IP "" 4
.
.nf

`Grep` searches the named input <FILE> (or standard input if
no files are named, or the file name `\-` is given) for lines
containing a match to the given <PATTERN>\. By default, `grep`
prints the matching lines\.
.
.fi
.
.IP "" 0
.
.SH "DEFINITION LISTS"
The definition list syntax is exactly the same as markdown\'s unordered list syntax but requires that the first line of each list item be terminated with a colon \"\fB:\fR\" character\. The contents of the first line (without the colon) is the \fIterm\fR; subsequent lines may be comprised of multiple paragraphs, code blocks, standard lists, and nested definition lists\.
.
.P
An example definition list, taken from BSD test(1)\'s \fIDESCRIPTION\fR section:
.
.IP "" 4
.
.nf

 The following primaries are used to construct expressions:

   * `\-b` <file>:
     True if <file> exists and is a block special file\.

   * `\-c` <file>:
     True if _file_ exists and is a character special file\.

   * `\-d` <file>:
     True if file exists and is a directory\.
.
.fi
.
.IP "" 0
.
.P
The definition list syntax is intentionally backward compatible with markdown(7)\'s list syntax\. This allows \fBronn\fR documents to be piped through normal markdown processors with minor degradation in output formatting\.
.
.SH "LINKS"
Ronn supports all markdown(7) linking features\. Additionally, section headings can be linked using reference\-style links:
.
.IP "" 4
.
.nf

## SECTION 1

See the following section\.

## SECTION 2

See [SECTION 1][] or [to put it another way][SECTION 1]\.
.
.fi
.
.IP "" 0
.
.P
The anchor name would be \fB#SECTION\-1\fR and \fB#SECTION\-2\fR\. All non\-word characters are removed and spaces are replaced by dashes\.
.
.SH "SEE ALSO"
ronn(1), markdown(7), roff(7)
