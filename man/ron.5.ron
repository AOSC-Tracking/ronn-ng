ron(5) -- humane manpage authoring format
=========================================

## SYNOPSIS

_name_(_section_) -- _tagline_<br>
`========================`<br>
<br>
`##` _SECTION HEADING_ ...<br>
<br>
_paragraph_ ...<br>
<br>
  `*` _term_`:`<br>&nbsp;&nbsp;[ _definition_ ]<br>
  `*` _term_`:`<br>&nbsp;&nbsp;[ _definition_ ]<br>

## DESCRIPTION

`ron` files are simple ASCII texts that document things in the
style of UNIX manpages but with a syntax and feature-set less
insane than that of `roff(7)`.  `ron` files are piped through
`ron(1)` to build and install traditional `roff(7)` manpages or
to generate hyperlinked HTML documentation.

All `ron` files must conform to a simple subset of the humane
text format, markdown(5).

It is neither possible nor desirable to express many of
`roff(7)`'s complex typesetting features in `ron`.

## MANPAGE TITLE

All manpages have a _name_, belong to a _section_, and have a
single sentence _tagline_ (useless but witty, preferably). `ron`
files must begin with a first-level heading that includes all of
this information. For example, this very manpage begins:

    ron(5) -- humane manpage authoring format
    =========================================

Here, we're saying that the manpage documents a thing named `ron`
in manual section `5` -- the "file formats" section; see
`manpages(5)` for full section list -- and that's quickly
described as a "humane manpage authoring format".

These bits of information are used to fill in the document
header, to create the `NAME` section, and also to establish
output filenames when processed through `ron(1)`.

## INLINE MARKUP

Manpages typically use a limited set of text formatting
capabilities. There's basically <b>boldface</b> and
<i>italics</i> (often displayed using <u>underline</u>).
<b>boldface</b> is used for flags, subcommands, and other
noun-like things; <i>italics</i> is used for user-specified
arguments, variables, or user input. `ron` uses backticks ("\`")
to denote `boldface` and underscores ("`_`") to denote _italics_.

  * `backticks`:
    Code, flags, commands, and nouns; typically displayed
    in in <b>boldface</b>.
  * `_`_underbars_`_`:
    User-specified arguments, variables, or user input; typically
    displayed in <u>underline</u>.
  * `**double stars**`:
    Like `backticks` but processes other inline markup.

Here is `grep(1)`'s DESCRIPTION section represented in `ron`:

    `Grep` searches the named input _FILE_ (or standard input if no
    files are named, or the file name `-` is given) for lines
    containing a match to the given _PATTERN_. By default, `grep`
    prints the matching lines.

Note that not only do `boldface`

Any argument surrounded by brackets is considered to be optional.
For example, [ filename ] would indicate an optional filename
argument.

## HEADINGS

Manpages typically have at least some of SYNOPSIS, DESCRIPTION,
and OPTIONS sections.

Additional sections include SYNTAX, ENVIRONMENT, HISTORY, BUGS,
SECURITY CONSIDERATIONS, STANDARDS / CONFORMING TO, AUTHOR, and
COPYRIGHT.

Finally, most manpages have a SEE ALSO section.


## DEFINITION LISTS



## EXAMPLES

The following in `test.1.ron`:

    test - condition evaluation utility
    ===================================

    ## SYNOPSIS

    `test` _expression_
    `[` _expression_ ]

    ## DESCRIPTION

    The `test` utility evaluates the expression and, if it evaluates
    to true, returns a zero (true) exit status; otherwise it returns
    1 (false).  If there is no expression, test also returns 1
    (false).

    ## OPTIONS

    All operators and flags are separate arguments to the `test`
    utility.

    The following primaries are used to construct expressions:

      * `-h` _file_:
        True if file exists and is a symbolic link. This operator is
        retained for compatibility with previous versions of this
        program. Do not rely on its existence; use `-L` instead.

      * `-n` _string_:
        True if the length of string is nonzero.

      * _file1_ `-nt` _file2_:
        True if _file1_ exists and is newer than _file2_.

## SEE ALSO

ron(1), markdown(5), manpages(5)
